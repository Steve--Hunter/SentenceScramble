<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Word Tiles
show_debug_message("--- Entered obInitHomePage");
CorrectString[16]="";
ScrambledString[16]="";

// How many words need to be unscrambled
WordCount=0;

// Timeleft - will be altered according to difficulty
global.DefaultTimeLeft=600; // seconds
global.TimeLeft=600 // Set to DefaulTimeLeft when starting a new Level/Chapter

globalvar NumberofLevel; // in case it changes
global.NumberofLevels=9 // one screen for now

// Arrays to hold Level, Sentence, Translation, and Scrambled Sentences
globalvar Level,Sentence,Translation,ScrambledSentence, SentenceIndex;

// Arrays to hold progress, each row a Level (uses group of strings to hold each Chapter)
// Count array from [1]
// format:
//          99999X99999X99999X repeat 99999X for each Sentence in Chapter (999999=time in hundredthsx100, X=sprite array 0=unlock, 1,2,3=stars, 4=locked
//          10 sentences in Chapter
//          8 Chapters in Level
globalvar ProgressLevel,i;

globalvar Timer; // Count up time in 100ths, for best time on level


// Load up arrays
scLoadArrays();

// Track progress, for level and chapter (usually 10 chapters in a level , need to complete all)
// SentenceOn holds the string from Sentence[]
globalvar LevelOn,ChapterOn,ChapterRow; // Which Level,Chapter,Row in Chapter (starts at 0 (offset), used as a counter, for Sentence[] / Translation[]
globalvar SentenceOn; // holds string for current line from array


// Interlock for Tick button
globalvar TickPressed; // true/false
randomize(); // ensure different shuffle used each time

// Read (create) progress
ini_open('savedata.ini');

global.ProgressLevel[1]=ini_read_string('Progress','Level1',''); // if first run, return blank string

if global.ProgressLevel[1]='' // first run
    {
    // initialise for first run
    for (i=1 ; i&lt;global.NumberofLevels; i +=1)
        {
        // 80 sentences in a Level (10 sentences x 8 chapters)
        // set all Levels all locked, time=00000 (not done)
        global.ProgressLevel[i]="000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004"
        }
        // to start game, unlock Level 1, Chapter 1, Sentence 1 (6th char =0)
        global.ProgressLevel[1]="000000000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004"
        // global.ProgressLevel[1]="123450678904123454678904000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004000004"
    }
    
        


show_debug_message("--- Left obHomePage");



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
