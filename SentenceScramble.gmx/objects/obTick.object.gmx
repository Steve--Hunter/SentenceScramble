<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spTick</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Check if all WordTiles in correct spot - if yes go to roWellDone, else roTryAgain
show_debug_message("-- Entered obTick code");


       
    
var correct,i,v,d,w,ChStartRow,ChEndRow,LevelRow,p;
correct=1; // start assuming correct

// LevelRow=scGetLevelRow(); // Get row in global.Level[] for LevelOn/ChapterOn

ChStartRow=(global.LevelOn-1)*8*10+(global.ChapterOn-1)*10+global.ChapterRow+1; // First row of Level/Chapter; ChapterRow is index as Chapter progresses
ChEndRow=ChStartRow+79;

show_debug_message("ChStartRow"+ string(ChStartRow));
show_debug_message("ChEndRow "+string(ChEndRow));
show_debug_message("LevelOn, ChapterOn, ChapterRow ="+string(global.LevelOn)+" "+string(global.ChapterOn)+" "+string(global.ChapterRow));
show_debug_message("(ChStartRow+global.ChapterRow)==ChEndRow"+string(ChStartRow)+" "+string(global.ChapterRow)+" "+string(ChEndRow));
//show_debug_message(" instance_number(obWordTile_NotPressed)="+string( instance_number(obWordTile_NotPressed)))
/*with (obWordTile_NotPressed)
    {
    if obWordTile_NotPressed.value != obWordTile_NotPressed.droppedon
    show_debug_message("obWordTile_NotPressed.value="+string(obWordTile_NotPressed.value)+" obWordTile_NotPressed.droppedon"+string(obWordTile_NotPressed.droppedon));
    
        correct=false; 
    }
*/
    // show_message("instance_number(obGrid)="+string(instance_number(obGrid))); 
    for (i = 0; i &lt; (instance_number(obGrid)); i += 1)
    {
    w=instance_find(obGrid,i);
    show_debug_message("i="+string(i)+" w="+string(w));
    show_debug_message("w.value="+string(w.value)+" w.droppedon="+string(w.droppedon));
    if string(w.value)!=string(w.droppedon)
        correct=0;       
   
    }

// if got it wrong, play bad boing sound, and reset room, have to do sentence again - against the clock

// show_message("line 40, correct="+string(correct));
if correct==0
    {
    audio_play_sound(soBoing,1,false);
    // Clear all WordTiles 
    
// show_message("line 45, destroy obWordTile_NotPressed");      
     for (i = 0; i &lt; instance_number(obWordTile_NotPressed); i += 1)
        {
        with instance_find(obWordTile_NotPressed,i) // next instance
            instance_destroy();
        }
// show_message("line 51, destroy obWordTile_Pressed");        
     for (i = 0; i &lt; instance_number(obWordTile_Pressed); i += 1)
        {
        with instance_find(obWordTile_Pressed,i) // next instance
            instance_destroy();
        }
    // restart room    
    room_restart(); 
    exit;
    }
    


// show_message("line 59, correct="+string(correct));
// if correct, play Well Done sound, next sentence; if at last, goto to WellDone room
if correct==1
    {
    audio_play_sound(soCorrect,1,false);
    //check if got all correct, and beat the clock
    show_debug_message("(ChStartRow+global.ChapterRow)==ChEndRow"+string(ChStartRow)+" "+string(global.ChapterRow)+" "+string(ChEndRow));
    p=(ChStartRow+global.ChapterRow); // ChapterRow starts at zero
    show_debug_message("p, ChEndRow="+string(p)+" "+string(ChEndRow));
    if p==ChEndRow // last Sentence in Chapter?
        {
        show_debug_message("-- Left obTick code"); 
        room_goto(roWellDone);
        exit;
        }
        

    global.ChapterRow=global.ChapterRow+1;
    
    // Clear all WordTiles 
     for (i = 0; i &lt; instance_number(obWordTile_NotPressed); i += 1)
        {
        with instance_find(obWordTile_NotPressed,i) // next instance
            instance_destroy();
        }
        
     for (i = 0; i &lt; instance_number(obWordTile_Pressed); i += 1)
        {
        with instance_find(obWordTile_Pressed,i) // next instance
            instance_destroy();
        }
    // restart room
    show_debug_message("-- Left obTick code");    
    room_restart();
     
    }
      
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
